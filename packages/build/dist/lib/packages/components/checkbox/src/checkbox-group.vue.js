"use strict";const e=require("vue"),C=require("../../../utils/hooks/use-form-item.js"),z=require("../../../utils/create.js"),i=require("../../../utils/is.js"),B=require("./checkbox.js"),G=e.defineComponent({name:"tl-checkbox-group",__name:"checkbox-group",props:{modelValue:{},defaultValue:{default:()=>[]},disabled:{type:Boolean,default:!1},max:{},tag:{default:"div"},direction:{default:"horizontal"},options:{default:()=>[]},gap:{},size:{default:"m"}},emits:["change","update:modelValue"],setup(d,{emit:m}){const a=z.createNamespace("checkboxGroup"),r=d,{size:p,disabled:f}=e.toRefs(r),{mergedSize:n,mergedDisabled:b}=C.useFormItem({size:p,disabled:f}),u=m;e.useSlots();const l=e.ref(r.defaultValue),s=e.computed(()=>i.isArray(r.modelValue)?r.modelValue:l.value),k=t=>{l.value=t,u("update:modelValue",t),u("change",t)},c=e.computed(()=>r.options.map(t=>typeof t=="number"||typeof t=="string"?{value:t,label:t}:t)),v=e.computed(()=>r.max===void 0?!1:s.value.length>=r.max),h=e.computed(()=>i.isArray(r.size)?{rowGap:`${r.size[1]}px`,columnGap:`${r.size[0]}px`}:{gap:`${x(r.size)}px`}),g=e.computed(()=>({flexDirection:y(r.direction),...h.value}));e.provide(B.checkboxGroupContextKey,e.reactive({size:n,name:"tlCheckboxGroup",calcVal:s,disabled:b,handleChange:k,isMax:v}));const x=t=>{if(typeof t=="number")return t;switch(t){case"s":return 8;case"m":return 16;case"l":return 24;default:return 16}},y=t=>t=="vertical"?"column":"row";return(t,S)=>{const V=e.resolveComponent("tl-checkbox");return e.openBlock(),e.createBlock(e.resolveDynamicComponent(t.tag),{class:e.normalizeClass([e.unref(a).b(),e.unref(a).m(t.direction),e.unref(a).m(e.unref(n))]),style:e.normalizeStyle(g.value)},{default:e.withCtx(()=>[c.value.length?(e.openBlock(!0),e.createElementBlock(e.Fragment,{key:0},e.renderList(c.value,o=>(e.openBlock(),e.createBlock(V,{key:o.value,checked:l.value.includes(o.value),value:o.value,disabled:o.disabled,indeterminate:o.indeterminate},{default:e.withCtx(()=>[t.$slots.label?e.renderSlot(t.$slots,"label",{key:0,data:o}):(e.openBlock(),e.createElementBlock(e.Fragment,{key:1},[e.createTextVNode(e.toDisplayString((o==null?void 0:o.label)??(o==null?void 0:o.value)),1)],64))]),_:2},1032,["checked","value","disabled","indeterminate"]))),128)):e.createCommentVNode("",!0),e.renderSlot(t.$slots,"default")]),_:3},8,["class","style"])}}});module.exports=G;
